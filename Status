#!/usr/bin/env sh
#  ______        ____  __   ____  _        _
# |  _ \ \      / /  \/  | / ___|| |_ __ _| |_ _   _ ___
# | | | \ \ /\ / /| |\/| | \___ \| __/ _` | __| | | / __|
# | |_| |\ V  V / | |  | |  ___) | || (_| | |_| |_| \__ \
# |____/  \_/\_/  |_|  |_| |____/ \__\__,_|\__|\__,_|___/
#
# Simple Program to set the Status for the DWM Bar.
# The Semi-colon separates the status into topbar and bottom bar texts.
#
# Author: VƒÅsi·π£·π≠ha
# Dependencies: nmcli, xbacklight[Xorg], pulseaudio, nerd-fonts

# Get the connectivity params
get_conn_params(){
	interface=`ip route |grep -oPm1 '(?<=dev )[^ ]+'`
	rx=`cat /sys/class/net/$interface/statistics/rx_bytes`
	tx=`cat /sys/class/net/$interface/statistics/tx_bytes`
}

# Calculate Connection Speeds
calc_speeds(){
	vel=$(($1 - $2))
	#vel=${vel#-}
	if [ "$vel" -ge 1000000 ]; then
		vel="$(echo "scale=1;$vel/1000000" | bc -l) MB/s"
	elif [ "$vel" -ge 1000 ]; then
		vel="$(echo "scale=1;$vel/1000" | bc -l) KB/s"
	elif [ "$vel" -lt 1 ]; then
		vel="0 B/s"
	else
		vel="$vel B/s"
	fi
	echo "$vel"
}

# Connection Details
get_net_traffic(){
	if [ ! -z "$(ip route)" ]; then
		get_conn_params
		in=$(calc_speeds $rx $(cat "$prevRx"))
		out=$(calc_speeds $tx $(cat "$prevTx"))
		echo $rx > "$prevRx"
		echo $tx > "$prevTx"
		if [ $interface = "wlo1" ]; then
			cmd=$(nmcli device wifi list | awk '/^*/ {print "ssid="$3, "signal="$8}')
			eval $cmd
			traff="ÔÖ∂ $out ÔÖµ $in Ô™® $signal%" #‚ñ≤‚ñº‚¨Ü‚¨á
		else
			ssid=$(nmcli | awk '/connected/ {print $4}')
			traff="ÔÖ∂ $out ÔÖµ $in Ôõø $ssid"
		fi
	else
		availConn=$(nmcli device wifi list | awk '$7 > 60' | wc -l)
		traff="Ô™û $(($availConn-1)) *"
	fi
	echo "$traff"
}

# Brightness
get_bcklt(){
	bcklt=`xbacklight -get`
	bcklt=${bcklit%.*}
	[ "$bcklt" -le 50 ] && echo "üîÖ" || echo "üîÜ"
}

# Volume 
get_vol(){
	vol=`pamixer --get-volume-human`
	$(echo "$vol" | grep "%" > /dev/null) && vol=$(echo "$vol" | tr -d "%")
	if [ "$vol" -gt 0 ] && [ "$vol" -le 33 ]; then
		vol="Ô©æ"
	elif [ "$vol" -gt 33 ] && [ "$vol" -le 66 ]; then
		vol="Ô©ø"
	elif [ "$vol" -gt 66 ]; then
		vol="Ô©Ω"
	else
		vol="Ô™Ä"
	fi
	echo "$vol"
}

# Local current time
get_lcl_time(){
	echo "Ôóµ $(date "+%B %d ÔÄó %T ")"
}

# Battery Stats
get_bat_stats(){
	batStatus=`cat /sys/class/power_supply/BAT0/status`
	if [ "$batStatus" = "Full" ]; then
		bat="ÔâÄ  ÔÉß 100"
	else
		bat=`cat /sys/class/power_supply/BAT0/capacity`
		if [ "$bat" -ge 90 ]; then
			icon="ÔâÄ  "
		elif [ "$bat" -ge 75 ]; then
			icon="ÔâÅ  "
		elif [ "$bat" -ge 50 ]; then
			icon="ÔâÇ  "
		elif [ "$bat" -ge 25 ]; then
			icon="ÔâÉ  "
		else
			icon="ÔâÑ  "
		fi

		if [ "$batStatus" = "Charging" ]; then
			icon="$iconÔá¶ "
		elif [ "$batStatus" = "Discharging" ]; then
			icon="$iconÔÅñ "
		else
			icon="$iconÔÅô "
		fi
	fi
	echo "$icon$bat%"
}

# Set Initial Values
prevRx=$XDG_CACHE_HOME"/prevRx"
prevTx=$XDG_CACHE_HOME"/prevTx"
echo $rx > "$prevRx"
echo $tx > "$prevTx"
sp=" ‚Ä¢ "

while sleep 1s; do
	xsetroot -name "$(get_net_traffic)$sp$(get_bat_stats)$sp$(get_lcl_time)"
done

